name: 20. 💯 CI

on:
  # 手动触发
  workflow_dispatch:
    inputs:
      CASE_SKIP_MARK:
        description: "需要跳过的用例标签 ('none' 表示不跳过)"
        required: false
        default: "none"
      UNITTEST:
        description: "是否进行单元测试"
        type: boolean
        required: false
        default: true
      DO_RELEASE:
        description: "是否进行打包并创建发行版"
        type: boolean
        required: false
        default: false

  schedule:
    # 代表北京时间每周五 17:30
    - cron: "30 09 * * 5"

# NOTICE: env 上下文只能在 run 步骤中使用
env:
  BASE_PATH: mypy/mypy

jobs:
  ###########################################
  # 语法检查
  ###########################################
  syntax_check:
    name: 代码质量检查
    # 这个 uses 不能用环境变量
    uses: wordsworth-mk/github-runner/.github/workflows/24.syntax_check.yml@main
    with:
      BASE_PATH: mypy/mypy
    secrets:
      MYPY_ACCESS_TOKEN: ${{ secrets.MYPY_ACCESS_TOKEN }}

  ###########################################
  # 单元测试 和 代码覆盖率报告
  ###########################################
  unittest:
    name: 单元测试
    if: ${{ inputs.UNITTEST || true }}
    needs:
      - syntax_check

    uses: wordsworth-mk/github-runner/.github/workflows/23.unittest.yml@main
    # NOTICE 要在 with 子句中传递环境变量，您应该使用 secrets 或 inputs
    with:
      CASE_PATH: mypy/mypy/tests
      # 依赖的二进制文件
      DEPENDENT_BINARY: "ffmpeg libreoffice poppler-utils wkhtmltopdf"
      NOT_RUN_MARK: ${{ inputs.CASE_SKIP_MARK }}
    secrets:
      ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      MYPY_ACCESS_TOKEN: ${{ secrets.MYPY_ACCESS_TOKEN }}

  ###########################################
  # 获取某个目录下的所有文件夹并将它们作为变量使用
  # OK
  ###########################################
  get_apps:
    name: 获取打包 APP 名称列表
    runs-on: ubuntu-latest
    # 设置输出，可在多个作业间传递参数
    outputs:
      apps: ${{ steps.set-matrix.outputs.apps }}

    steps:
      - uses: actions/checkout@v4
        # 访问仓库用到的 Personal access token
        env:
          MYPY_ACCESS_TOKEN: ${{ secrets.MYPY_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
        with:
          token: ${{ env.MYPY_ACCESS_TOKEN }}
          repository: M-Kepler/Python

      - name: 获取打包 APP 路径列表
        id: set-matrix
        run: |
          apps=$(bash ${{ env.BASE_PATH }}/build/get_apps.sh "mypy/mypy/apps")
          echo "found apps: $apps"
          # key=value 格式
          echo "apps=[$apps]" >> $GITHUB_OUTPUT
          echo "base_path=${{ env.BASE_PATH }}" >> $GITHUB_OUTPUT

  ###########################################
  # 打包发布
  ###########################################
  # 没必要一个个设置环境再打包
  package:
    name: 打包发布
    if: ${{ inputs.DO_RELEASE }}
    needs:
      - syntax_check
      - get_apps
      - unittest
    uses: wordsworth-mk/github-runner/.github/workflows/22.package.yml@main

    # 使用前面的 job 的输出
    # #### 不用 matrix 多个任务，一个任务进行打包就可以了
    # strategy:
    #   matrix:
    #     apps: ${{ fromJSON(needs.get_apps.outputs.apps) }}

    with:
      # APPS_PATH: ${{ fromJSON(needs.get_apps.outputs.apps) }}
      DO_RELEASE: ${{ inputs.DO_RELEASE || false }}
    secrets:
      MYPY_ACCESS_TOKEN: ${{ secrets.MYPY_ACCESS_TOKEN }}
